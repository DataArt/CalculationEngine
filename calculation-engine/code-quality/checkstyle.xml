<?xml version="1.0"?>
<!DOCTYPE module PUBLIC "-//Puppy Crawl//DTD Check Configuration 1.3//EN" "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">
<module name="Checker">
  <property name="charset" value="UTF-8" />
  <property name="severity" value="error" />

  <module name="FileTabCharacter">
    <property name="eachLine" value="true" />
  </module>

  <module name="TreeWalker">

    <module name="AbbreviationAsWordInName">
      <property name="ignoreFinal" value="false" />
      <property name="allowedAbbreviationLength" value="1" />
    </module>

    <module name="AnnotationLocation">
      <property name="tokens" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF" />
    </module>
    <module name="AnnotationLocation">
      <property name="tokens" value="VARIABLE_DEF" />
      <property name="allowSamelineMultipleAnnotations" value="true" />
    </module>

    <module name="ArrayTypeStyle" />

    <module name="AvoidEscapedUnicodeCharacters">
      <property name="allowEscapesForControlCharacters" value="true" />
      <property name="allowByTailComment" value="true" />
      <property name="allowNonPrintableEscapes" value="true" />
    </module>

    <module name="AvoidStarImport" />

    <module name="ClassTypeParameterName">
      <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)" />
      <message key="name.invalidPattern" value="Class type name ''{0}'' must match pattern ''{1}''." />
    </module>

    <module name="EmptyBlock">
      <property name="option" value="TEXT" />
      <property name="tokens" value="LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_SWITCH" />
    </module>

    <module name="FallThrough" />

    <module name="GenericWhitespace">
      <message key="ws.followed" value="GenericWhitespace ''{0}'' is followed by whitespace." />
      <message key="ws.preceded" value="GenericWhitespace ''{0}'' is preceded with whitespace." />
      <message key="ws.illegalFollow" value="GenericWhitespace ''{0}'' should followed by whitespace." />
      <message key="ws.notPreceded" value="GenericWhitespace ''{0}'' is not preceded with whitespace." />
    </module>

    <module name="IllegalTokenText">
      <property name="tokens" value="STRING_LITERAL, CHAR_LITERAL" />
      <property name="format" value="\\u00(08|09|0(a|A)|0(c|C)|0(d|D)|22|27|5(C|c))|\\(0(10|11|12|14|15|42|47)|134)" />
      <property name="message" value="Avoid using corresponding octal or Unicode escape." />
    </module>

    <module name="LineLength">
      <property name="max" value="180" />
      <property name="ignorePattern" value="^package.*|^import.*|a href|href|http://|https://|ftp://" />
    </module>

    <module name="LocalVariableName">
      <property name="tokens" value="VARIABLE_DEF" />
      <property name="format" value="^[a-z][a-zA-Z0-9]*$" />
      <property name="allowOneCharVarInForLoop" value="true" />
      <message key="name.invalidPattern" value="Local variable name ''{0}'' must match pattern ''{1}''." />
    </module>

    <module name="MemberName">
      <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$" />
      <message key="name.invalidPattern" value="Member name ''{0}'' must match pattern ''{1}''." />
    </module>

    <module name="MethodName">
      <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9_]*$" />
      <message key="name.invalidPattern" value="Method name ''{0}'' must match pattern ''{1}''." />
    </module>

    <module name="MethodParamPad" />

    <module name="MethodTypeParameterName">
      <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)" />
      <message key="name.invalidPattern" value="Method type name ''{0}'' must match pattern ''{1}''." />
    </module>

    <module name="MissingSwitchDefault" />

    <module name="ModifierOrder" />

    <module name="MultipleVariableDeclarations" />

    <module name="NeedBraces" />

    <module name="NoFinalizer" />

    <module name="NoLineWrap" />

    <module name="NonEmptyAtclauseDescription" />

    <module name="OneStatementPerLine" />

    <module name="OneTopLevelClass" />

    <module name="OverloadMethodsDeclarationOrder" />

    <module name="OuterTypeFilename" />

    <module name="PackageName">
      <property name="format" value="^[a-z]+(\.[a-z][a-z_0-9]*)*$" />
      <message key="name.invalidPattern" value="Package name ''{0}'' must match pattern ''{1}''." />
    </module>

    <module name="ParameterName">
      <property name="format" value="^[a-z]*[a-z0-9][a-zA-Z0-9]*$" />
      <message key="name.invalidPattern" value="Parameter name ''{0}'' must match pattern ''{1}''." />
    </module>

    <module name="RequireThis">
      <property name="checkFields" value="true" />
      <property name="checkMethods" value="false" />
      <message key="name.invalidPattern" value="Parameter name ''{0}'' must match pattern ''{1}''." />
    </module>

    <module name="SeparatorWrap">
      <property name="tokens" value="DOT" />
      <property name="option" value="nl" />
    </module>

    <module name="SeparatorWrap">
      <property name="tokens" value="COMMA" />
      <property name="option" value="EOL" />
    </module>

    <module name="TypeName">
      <message key="name.invalidPattern" value="Type name ''{0}'' must match pattern ''{1}''." />
    </module>

    <module name="RegexpSinglelineJava">
      <property name="format" value="\@SuppressWarnings\(.*?\)\s*(//)?\s*$" />
      <property name="message" value="All @SuppressWarnings() annotations should be commented on the same line with // and description." />
      <property name="ignoreComments" value="false" />
    </module>

    <module name="UpperEll" />

    <module name="VariableDeclarationUsageDistance" />

    <module name="WhitespaceAround">
      <property name="allowEmptyConstructors" value="true" />
      <property name="allowEmptyMethods" value="true" />
      <property name="allowEmptyTypes" value="true" />
      <property name="allowEmptyLoops" value="true" />
      <message key="ws.notFollowed" value="WhitespaceAround: ''{0}'' is not followed by whitespace." />
      <message key="ws.notPreceded" value="WhitespaceAround: ''{0}'' is not preceded with whitespace." />
    </module>

  </module>
</module>